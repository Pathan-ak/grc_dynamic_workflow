# Generated by Django 4.2 on 2025-08-17 14:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ticketflow', '0012_alter_formfield_choices'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_id', models.CharField(help_text='e.g., CTRL-0001 or CTRL-2025-0001', max_length=40, unique=True)),
                ('description', models.TextField()),
                ('frequency', models.CharField(blank=True, choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('HALFYEARLY', 'Half Yearly'), ('YEARLY', 'Yearly')], max_length=20)),
                ('operating_effectively', models.CharField(blank=True, choices=[('YES', 'Yes'), ('MINOR_IMPROVEMENT', 'Needs minor improvement'), ('IMPROVEMENT', 'Needs improvement'), ('NO', 'No'), ('NA', 'N/A')], max_length=24)),
                ('num_samples_tested', models.PositiveIntegerField(default=0)),
                ('num_samples_objective_met', models.PositiveIntegerField(default=0)),
                ('documentation_up_to_date', models.CharField(blank=True, choices=[('YES', 'Yes'), ('MINOR_IMPROVEMENT', 'Needs minor improvement'), ('IMPROVEMENT', 'Needs improvement'), ('NO', 'No'), ('NA', 'N/A')], max_length=24)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='controls/')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='controls_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ControlFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_id', models.CharField(help_text='e.g., RISK-0001 or RISK-2025-0001', max_length=40, unique=True)),
                ('description', models.TextField()),
                ('impact_rating', models.CharField(choices=[('VERY_SIGNIFICANT', 'Very Significant'), ('SIGNIFICANT', 'Significant'), ('MODERATE', 'Moderate'), ('MINOR', 'Minor')], max_length=24)),
                ('impact_justification', models.TextField(blank=True)),
                ('likelihood_rating', models.CharField(choices=[('VERY_LIKELY', 'Very Likely'), ('LIKELY', 'Likely'), ('POSSIBLE', 'Possible'), ('RARE', 'Rare')], max_length=24)),
                ('likelihood_justification', models.TextField(blank=True)),
                ('inherent_risk_level', models.CharField(blank=True, max_length=24)),
                ('residual_risk_level', models.CharField(blank=True, max_length=24)),
                ('control_effectiveness_overall', models.CharField(blank=True, max_length=24)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ASSIGNED_RR', 'Assigned to Risk Representative'), ('ASSIGNED_RC', 'Assigned to Risk Champion'), ('ASSIGNED_RA', 'Assigned to Risk Approver'), ('ASSIGNED_CRO', 'Assigned to CRO'), ('APPROVED', 'Risk Approved')], default='DRAFT', max_length=24)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='risks/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_controls_cached', models.PositiveIntegerField(default=0)),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='risks', to='ticketflow.businessunit')),
            ],
        ),
        migrations.CreateModel(
            name='RiskCategoryL1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubControlFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160)),
                ('factor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subfactors', to='ticketflow.controlfactor')),
            ],
            options={
                'unique_together': {('factor', 'name')},
            },
        ),
        migrations.CreateModel(
            name='RiskTypeL2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types', to='ticketflow.riskcategoryl1')),
            ],
            options={
                'unique_together': {('parent', 'name')},
            },
        ),
        migrations.CreateModel(
            name='RiskControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('note', models.CharField(blank=True, max_length=240)),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketflow.control')),
                ('risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketflow.risk')),
            ],
            options={
                'unique_together': {('risk', 'control')},
            },
        ),
        migrations.AddField(
            model_name='risk',
            name='category_l1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='risks', to='ticketflow.riskcategoryl1'),
        ),
        migrations.AddField(
            model_name='risk',
            name='controls',
            field=models.ManyToManyField(related_name='risks', through='ticketflow.RiskControl', to='ticketflow.control'),
        ),
        migrations.AddField(
            model_name='risk',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risks_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='risk',
            name='cro',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risks_cro', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_approver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risks_ra', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_champion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risks_rc', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risks_owned', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_representative',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risks_rr', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='risk',
            name='type_l2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='risks', to='ticketflow.risktypel2'),
        ),
        migrations.AddField(
            model_name='control',
            name='factor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='controls', to='ticketflow.controlfactor'),
        ),
        migrations.AddField(
            model_name='control',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='control',
            name='sub_factor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='controls', to='ticketflow.subcontrolfactor'),
        ),
    ]
